@model Shop_Mvc.Models.ProductViewModel

@{
    ViewData["Title"] = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    string base64Image = $"/Product_Images/product_{Model.Product.id}.jpg";
}

<div class="product-link">
    <a class="product-link-item" asp-action="Index" asp-controller="Home">Store</a>
    <a class="product-link-item" asp-action="SubcategoriesView" asp-controller="Categories" asp-route-categoryName="@Model.Product.Category">@Html.DisplayFor(model => model.Product.Category)</a>
    <a class="product-link-item" asp-action="ProductsView" asp-controller="Categories" asp-route-subcategoryName="@Model.Product.Subcategory">@Html.DisplayFor(model => model.Product.Subcategory)</a>
    <a class="product-link-item-last" asp-action="ProductView" asp-controller="Home">@Html.DisplayFor(model => model.Product.Title)</a>
</div>

<div class="product-container">
    <div class="product-container-main">
        <a class="come-back-btn">
            <i class="fa-solid fa-chevron-left" style="color: #000000; margin-right:5px;"></i>
            <p class="back-txt">Назад</p>
        </a>
        <div class="product-card">
            <div class="product-container-main-body">
                <img class="product-image" src="@base64Image">
                <div class="product-info">
                    <h1 class="product-info-title">@Html.DisplayFor(model => model.Product.Title)</h1>
                    <h2 class="product-info-price">@Html.DisplayFor(model => model.Product.Price) гривень за шт</h2>
                    <div class="product-info-buttons">
                        <a onclick="AddToCartProduct(event);" id="@Model.Product.id" class="product-info-add-to-cart-btn"><i id="@Model.Product.id" class="fa-solid fa-cart-arrow-down" style="color: #ffffff; margin-right: 5px;"></i><p id="@Model.Product.id" style="font-weight:400;">Додати в кошик</p></a>
                        <a class="product-info-add-to-favorites-btn"><i class="fa-regular fa-heart" style="color: #000000;"></i></a>
                    </div>
                </div>
            </div>
            <div class="product-card-divider"></div>
            <div class="product-about-container">
                <p class="product-about-container-title">Про товар</p>
                <ul class="product-about-container-main">
                    @if (!string.IsNullOrWhiteSpace(Model.Product.Brand))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Бренд:</p>
                            <p>@Model.Product.Brand</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.Country))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Країна:</p>
                            <p>@Model.Product.Country</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.Method))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Метод:</p>
                            <p>@Model.Product.Method</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.Basis))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Основа:</p>
                            <p>@Model.Product.Basis</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.Temperature))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Температура:</p>
                            <p>@Model.Product.Temperature</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.Expiration_date))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Термін придатності:</p>
                            <p>@Model.Product.Expiration_date</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.Storage_conditions))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Умови зберігання:</p>
                            <p>@Model.Product.Storage_conditions</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.Caloric))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Калорійність:</p>
                            <p>@Model.Product.Caloric</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.Carbohydrate))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Вміст вуглеводів:</p>
                            <p>@Model.Product.Carbohydrate</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.Fat))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Вміст жирів:</p>
                            <p>@Model.Product.Fat</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.Protein))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Вміст білків:</p>
                            <p>@Model.Product.Protein</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.Allergen))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Алергени:</p>
                            <p>@Model.Product.Allergen</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.Refuel))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Поповнення:</p>
                            <p>@Model.Product.Refuel</p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Product.Quantity_in_package))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Кількість у пакеті:</p>
                            <p>@Model.Product.Quantity_in_package</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.Energy_value))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Енергетична цінність:</p>
                            <p>@Model.Product.Energy_value</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.Sort))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Сорт:</p>
                            <p>@Model.Product.Sort</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.Features))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Особливості:</p>
                            <p>@Model.Product.Features</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.For_children_with))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Для дітей з:</p>
                            <p>@Model.Product.For_children_with</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.Microelements))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Мікроелементи:</p>
                            <p>@Model.Product.Microelements</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.Vitamins))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Вітаміни:</p>
                            <p>@Model.Product.Vitamins</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.Type_of_cheese))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Тип сиру:</p>
                            <p>@Model.Product.Type_of_cheese</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.Type_of_sausage))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Тип ковбаси:</p>
                            <p>@Model.Product.Type_of_sausage</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.Method_of_processing))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Метод обробки:</p>
                            <p>@Model.Product.Method_of_processing</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.By_composition))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">За складом:</p>
                            <p>@Model.Product.By_composition</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.Quantity_box_package))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Кількість в коробці/упаковці:</p>
                            <p>@Model.Product.Quantity_box_package</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.Diaper_size))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Розмір підгузника:</p>
                            <p>@Model.Product.Diaper_size</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.Alcohol))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Спирт:</p>
                            <p>@Model.Product.Alcohol</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.Temperature_wine_serving))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Температура подачі вина:</p>
                            <p>@Model.Product.Temperature_wine_serving</p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Product.Region))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Регіон:</p>
                            <p>@Model.Product.Region</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.Wine_classification))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Класифікація вина:</p>
                            <p>@Model.Product.Wine_classification</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.Aging_in_barrel))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Витримка в бочці:</p>
                            <p>@Model.Product.Aging_in_barrel</p>
                        </li>
                    }

                    @if (!string.IsNullOrWhiteSpace(Model.Product.Package_volume))
                    {
                        <li class="additional-param-item">
                            <p class="distinct-param-text">Об'єм упаковки:</p>
                            <p>@Model.Product.Package_volume</p>
                        </li>
                    }
                </ul>
                <div class="product-about-container-secondary">
                    @if (!string.IsNullOrWhiteSpace(Model.Product.Composition))
                    {
                        <div class="composition-section">
                            <p class="product-about-container-secondary-title">Склад</p>
                            <p class="product-about-container-secondary-text">@Html.DisplayFor(model => model.Product.Composition)</p>
                        </div>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Product.Description))
                    {
                        <div class="description-section">
                            <p class="product-about-container-secondary-title">Опис</p>
                            <p class="product-about-container-secondary-text">@Html.DisplayFor(model => model.Product.Description)</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="product-container-right">
        <h1 style="margin-bottom:0.5rem">Схожі продукти</h1>
        <div class="product-list">
            @foreach (var product in Model.Product_list)
            {
                <div class="other-products-item responsive">
                    <div class="other-products-item-cart" id="@product.id">
                        @{
                            if (product.Promo != null)
                            {
                                <div class="main-page-product-promo" style="z-index:2">
                                    <p class="main-page-product-promo-text">@product.Promo</p>
                                </div>
                            }
                        }
                        <a asp-controller="Home" asp-action="ProductView" asp-route-id="@product.id" style="width:100%; height:100%; position:absolute; top:0; left:0; z-index:4;" onclick="ShowLoader()">
                            <div id="overlay@(product.id)" class="product-overlay @(product.inCart != null ? "green" : "")"></div>
                        </a>
                        <div class="main-page-product-favorite" style="z-index:3;">
                            <svg width="1.000rem" height="0.938rem" viewBox="0 0 16 15" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path d="M14.1915 7.56097L14.218 7.52031L14.2405 7.47727C14.6216 6.74672 15 5.85591 15 4.9799C15 2.71644 13.5355 1.33759 11.8732 1.07637C10.4691 0.780647 8.956 1.35222 8.01756 2.56858C7.09624 1.31855 5.53247 0.883302 4.17204 1.06957L4.17203 1.06952L4.16182 1.07103C2.48513 1.31826 1 2.70055 1 4.9799C1 5.85591 1.37843 6.74672 1.75955 7.47727L1.782 7.52031L1.80851 7.56097C2.279 8.28247 2.86715 9.13148 3.56752 9.89897C4.82205 11.286 6.35624 12.5732 7.42816 13.3204L8.035 13.7434L8.61708 13.2869C8.64265 13.2668 8.66858 13.2465 8.69484 13.2259C9.69949 12.4384 11.1982 11.2636 12.4324 9.89901C13.1328 9.13152 13.721 8.28248 14.1915 7.56097Z" stroke="currentColor" stroke-width="1"></path></svg>
                        </div>
                        <div class="main-page-product-cart-btn" id="@product.id">
                            <i class="fa-solid fa-cart-shopping" style="color: #ffffff;font-size: 1.5rem;" onclick="AddToCart(event)" id="@product.id"></i>
                        </div>
                        <div class="main-page-product other-products-product" id="@product.id">
                            @{
                                var imagePath = $"/Product_Images/product_{product.id}.jpg";
                                <img class="main-page-product-img other-products-product-img" src="@imagePath" />
                            }
                            <span class="main-page-product-title" style="margin-top:135px; min-height:30px; overflow-y:hidden">@product.Title</span>
                            <span class="main-page-product-mass">@product.Brand</span>
                            <div class="main-page-product-bottom">
                                <span class="main-page-product-bottom-price-promo" id="@product.id">@product.Price грн</span>
                                <span class="main-page-product-bottom-price-brand">@product.Country</span>
                            </div>
                        </div>
                        @{
                            if (product.inCart == null)
                            {
                                <div class="main-page-product-counter-container main-page-product-counter-similar-container" id="counterContainerSimilar@(product.id)">
                                    <svg id="@product.id" onclick="Minus(event)" width="2.5rem" height="2.5rem" viewBox="0 0 32 32" fill="none" cursor="pointer" xmlns="http://www.w3.org/2000/svg" class=""><rect id="@product.id" x="22" y="15" width="2" height="12" rx="1" transform="rotate(90 22 15)" fill="currentColor"></rect></svg>
                                    <div class="main-page-product-counter-container-count">
                                        <input id="productSimilarInput@(product.id)" type="text" inputmode="numeric" maxlength="3" oninput="this.value = this.value.replace(/[^0-9]/g, '');" value="" class="num-input-product">
                                        <span id="productSimilarSpan@(product.id)" class="cart-body-item-info-count-btn-counter-num"></span>
                                        <span class="cart-body-item-info-count-btn-counter-text-product">шт</span>
                                    </div>
                                    <svg id="@product.id" onclick="Plus(event)" width="2.5rem" height="2.5rem" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg" cursor="pointer" style="justify-self:end;"><rect id="@product.id" x="15" y="10" width="2" height="12" rx="1" fill="currentColor"></rect><rect id="@product.id" x="22" y="15" width="2" height="12" rx="1" transform="rotate(90 22 15)" fill="currentColor"></rect></svg>
                                </div>
                            }
                            else
                            {
                                <div class="main-page-product-counter-container main-page-product-counter-similar-container" id="counterContainerSimilar@(product.id)" style="display:flex;">
                                    <svg id="@product.id" onclick="Minus(event)" width="2.5rem" height="2.5rem" viewBox="0 0 32 32" fill="none" cursor="pointer" xmlns="http://www.w3.org/2000/svg" class=""><rect id="@product.id" x="22" y="15" width="2" height="12" rx="1" transform="rotate(90 22 15)" fill="currentColor"></rect></svg>
                                    <div class="main-page-product-counter-container-count">
                                        <input id="productSimilarInput@(product.id)" type="text" inputmode="numeric" maxlength="3" oninput="this.value = this.value.replace(/[^0-9]/g, '');" value="@product.inCart.Count" class="num-input-product">
                                        <span id="productSimilarSpan@(product.id)" class="cart-body-item-info-count-btn-counter-num">@product.inCart.Count</span>
                                        <span class="cart-body-item-info-count-btn-counter-text-product">шт</span>
                                    </div>
                                    <svg id="@product.id" onclick="Plus(event)" width="2.5rem" height="2.5rem" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg" cursor="pointer" style="justify-self:end;"><rect id="@product.id" x="15" y="10" width="2" height="12" rx="1" fill="currentColor"></rect><rect id="@product.id" x="22" y="15" width="2" height="12" rx="1" transform="rotate(90 22 15)" fill="currentColor"></rect></svg>
                                </div>
                            }
                        }
                    </div>
                </div>
            }

        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        $('#skeleton').hide();
        var userId = GetUserId();

        if (userId === null) {
            GetCartProductFromCookie();

            var index = productsInCart.findIndex(function (element) {
                return element.id == @Model.Product.id;
            });

            if (productsInCart[index] != null) {
                var btns = document.getElementsByClassName('product-info-buttons')[0];
                var addToCartBtn = btns.getElementsByClassName('product-info-add-to-cart-btn')[0];
                addToCartBtn.style.display = 'none';
                var counterContainer = MakeCounter(@Model.Product.id);
                btns.prepend(counterContainer);
            }
        }
        else {
            fetch(`/User/GetUserCartProductCount?productId=${@Model.Product.id}&userId=${userId}`)
                .then(response => response.json())
                .then(data => {
                    console.log(data);
                    if (data > 0) {
                        var btns = document.getElementsByClassName('product-info-buttons')[0];
                        var addToCartBtn = btns.getElementsByClassName('product-info-add-to-cart-btn')[0];
                        addToCartBtn.style.display = 'none';
                        var counterContainer = MakeCounter(@Model.Product.id, data);
                        btns.prepend(counterContainer);
                    }
                })
        }
    });

    function MakeCounter(id, count = 0) {
        userId = GetUserId();
        if (userId === null) {
            var counter;
            var index = productsInCart.findIndex(function (element) {
                return element.id == id;
            });
            if (productsInCart[index] == undefined) {
                counter = `<div class="product-menu-counter-container" id="counterContainer${id}" style="display:flex; position:relative; height: 48px; min-width: 196px; justify-content:space-between;">
                                                                                            <svg id="${id}" onclick="Minus(event)" width="2.5rem" height="50px" viewBox="0 0 32 32" fill="none" cursor="pointer" xmlns="http://www.w3.org/2000/svg" class=""><rect id="${id}" x="22" y="15" width="2" height="12" rx="1" transform="rotate(90 22 15)" fill="currentColor"></rect></svg>
                                                                                            <div class="main-page-product-counter-container-count" style="min-width: 90px;">
                                                                                                    <input id="productInput${id}" type="text" inputmode="numeric" maxlength="3" oninput="this.value = this.value.replace(/[^0-9]/g, '');" value="1" style="margin-top:2px; left:15%;" class="num-input-product">
                                                                                                        <span id="productSpan${id}" class="cart-body-item-info-count-btn-counter-num">$"1"</span>
                                                                                                <span class="cart-body-item-info-count-btn-counter-text-product">шт</span>
                                                                                            </div>
                                                                                                        <svg id="${id}" onclick="Plus(event)" width="2.5rem" height="50px" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg" cursor="pointer" style="justify-self:end;"><rect id="${id}" x="15" y="10" width="2" height="12" rx="1" fill="currentColor"></rect><rect id="${id}" x="22" y="15" width="2" height="12" rx="1" transform="rotate(90 22 15)" fill="currentColor"></rect></svg>
                                                                                        </div>`;
            }
            else {
                counter = `<div class="product-menu-counter-container" id="counterContainer${id}" style="display:flex; position:relative; justify-content:space-between; height: 48px; min-width: 196px">
                                                                                        <svg id="${id}" onclick="Minus(event)" width="2.5rem" height="50px" viewBox="0 0 32 32" fill="none" cursor="pointer" xmlns="http://www.w3.org/2000/svg" class=""><rect id="${id}" x="22" y="15" width="2" height="12" rx="1" transform="rotate(90 22 15)" fill="currentColor"></rect></svg>
                                                                                            <div class="main-page-product-counter-container-count" style="min-width: 90px;">
                                                                                                <input id="productInput${id}" type="text" inputmode="numeric" maxlength="3" oninput="this.value = this.value.replace(/[^0-9]/g, '');" value="${productsInCart[index].count}" style="margin-top:2px; left:15%;" class="num-input-product">
                                                                                                    <span id="productSpan${id}" class="cart-body-item-info-count-btn-counter-num">${productsInCart[index].count}</span>
                                                                                            <span class="cart-body-item-info-count-btn-counter-text-product">шт</span>
                                                                                        </div>
                                                                                                    <svg id="${id}" onclick="Plus(event)" width="2.5rem" height="50px" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg" cursor="pointer" style="justify-self:end;"><rect id="${id}" x="15" y="10" width="2" height="12" rx="1" fill="currentColor"></rect><rect id="${id}" x="22" y="15" width="2" height="12" rx="1" transform="rotate(90 22 15)" fill="currentColor"></rect></svg>
                                                                                    </div>`;
            }
            var tempDiv = document.createElement('div');
            tempDiv.innerHTML = counter;
            return tempDiv;
        }
        else {
            var counter;
            if (count == 0) {
                counter = `<div class="product-menu-counter-container" id="counterContainer${id}" style="display:flex; position:relative; height: 48px; min-width: 196px; justify-content:space-between;">
                                                                                                <svg id="${id}" onclick="Minus(event)" width="2.5rem" height="50px" viewBox="0 0 32 32" fill="none" cursor="pointer" xmlns="http://www.w3.org/2000/svg" class=""><rect id="${id}" x="22" y="15" width="2" height="12" rx="1" transform="rotate(90 22 15)" fill="currentColor"></rect></svg>
                                                                                                <div class="main-page-product-counter-container-count" style="min-width: 90px;">
                                                                                                        <input id="productInput${id}" type="text" inputmode="numeric" maxlength="3" oninput="this.value = this.value.replace(/[^0-9]/g, '');" value="1" style="margin-top:2px; left:15%;" class="num-input-product">
                                                                                                            <span id="productSpan${id}" class="cart-body-item-info-count-btn-counter-num">$"1"</span>
                                                                                                    <span class="cart-body-item-info-count-btn-counter-text-product">шт</span>
                                                                                                </div>
                                                                                                            <svg id="${id}" onclick="Plus(event)" width="2.5rem" height="50px" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg" cursor="pointer" style="justify-self:end;"><rect id="${id}" x="15" y="10" width="2" height="12" rx="1" fill="currentColor"></rect><rect id="${id}" x="22" y="15" width="2" height="12" rx="1" transform="rotate(90 22 15)" fill="currentColor"></rect></svg>
                                                                                            </div>`;
            }
            else {
                counter = `<div class="product-menu-counter-container" id="counterContainer${id}" style="display:flex; position:relative; justify-content:space-between; height: 48px; min-width: 196px">
                                                                                            <svg id="${id}" onclick="Minus(event)" width="2.5rem" height="50px" viewBox="0 0 32 32" fill="none" cursor="pointer" xmlns="http://www.w3.org/2000/svg" class=""><rect id="${id}" x="22" y="15" width="2" height="12" rx="1" transform="rotate(90 22 15)" fill="currentColor"></rect></svg>
                                                                                                <div class="main-page-product-counter-container-count" style="min-width: 90px;">
                                                                                                    <input id="productInput${id}" type="text" inputmode="numeric" maxlength="3" oninput="this.value = this.value.replace(/[^0-9]/g, '');" value="${count}" style="margin-top:2px; left:15%;" class="num-input-product">
                                                                                                        <span id="productSpan${id}" class="cart-body-item-info-count-btn-counter-num">${count}</span>
                                                                                                <span class="cart-body-item-info-count-btn-counter-text-product">шт</span>
                                                                                            </div>
                                                                                                        <svg id="${id}" onclick="Plus(event)" width="2.5rem" height="50px" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg" cursor="pointer" style="justify-self:end;"><rect id="${id}" x="15" y="10" width="2" height="12" rx="1" fill="currentColor"></rect><rect id="${id}" x="22" y="15" width="2" height="12" rx="1" transform="rotate(90 22 15)" fill="currentColor"></rect></svg>
                                                                                        </div>`;
            }
            var tempDiv = document.createElement('div');
            tempDiv.innerHTML = counter;
            return tempDiv;
        }
    }

    function AddToCartProduct(event) {
        var currentTime = new Date().getTime();
        if (currentTime - lastClickTime >= 500) {
            var id = event.target.id;
            var userId = GetUserId();

            if (userId === null) {
                var btns = document.getElementsByClassName('product-info-buttons')[0];
                var addToCartBtn = btns.getElementsByClassName('product-info-add-to-cart-btn')[0];
                addToCartBtn.style.display = 'none';
                var counterContainer = MakeCounter(@Model.Product.id);
                btns.prepend(counterContainer);

                var product = document.querySelector(`.other-products-item-cart[id="${id}"]`);
                if (product) {
                    var overlay = product.getElementsByClassName('product-overlay')[0];
                    product.classList.add('added');
                    overlay.classList.add('green');
                }

                var counterContainer = document.getElementById(`counterContainer${id}`);
                counterContainer.style.display = 'flex';
                var counterContainerSimilar = document.getElementById(`counterContainerSimilar${id}`);
                if (counterContainerSimilar)
                    counterContainerSimilar.style.display = 'flex';

                var span = document.getElementById(`productSpan${id}`);
                span.textContent = 1;
                var input = document.getElementById(`productInput${id}`);
                input.value = span.textContent;
                var spanSimilar = document.getElementById(`productSimilarSpan${id}`);
                if (spanSimilar)
                    spanSimilar.textContent = 1;
                var inputSimilar = document.getElementById(`productSimilarInput${id}`);
                if (inputSimilar)
                    inputSimilar.value = span.textContent;

                var price = '@Model.Product.Price';
                var parsedPrice = parseFloat(price.replace(',', '.'));
                var title = "@Model.Product.Title";
                title = title.replace(/&#x([0-9A-Fa-f]+);/g, function (match, hex) {
                    return String.fromCharCode(parseInt(hex, 16));
                });

                var cartProduct = new CartProduct(id, 1, parsedPrice, title);
                productsInCart.push(cartProduct);
                const jsonString = JSON.stringify(productsInCart);
                document.cookie = `MyCookie=${encodeURIComponent(jsonString)}; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=/; Secure; SameSite=None`;
                console.log(productsInCart);


                var cart = document.getElementsByClassName('cart-body-items')[0];
                var leftCart = document.getElementById('leftCartItemContainer');

                var itemInfo = productsInCart.find(function (element) {
                    return element.id === id;
                });

                var item = AddHtmlToCart(itemInfo);
                cart.innerHTML += item;

                item = AddHtmlToLeftCart(itemInfo);
                leftCart.innerHTML += item;
                SetInputs();
                CheckIfCartIsEmpty();
                GetFullPriceForCart();
            }
            else {
                var btns = document.getElementsByClassName('product-info-buttons')[0];
                var addToCartBtn = btns.getElementsByClassName('product-info-add-to-cart-btn')[0];
                addToCartBtn.style.display = 'none';

                var price = '@Model.Product.Price';
                var parsedPrice = parseFloat(price.replace(',', '.'));
                var title = "@Model.Product.Title";
                title = title.replace(/&#x([0-9A-Fa-f]+);/g, function (match, hex) {
                    return String.fromCharCode(parseInt(hex, 16));
                });

                fetch(`/User/AddUserCartProduct?productId=${id}&userId=${userId}&price=${parsedPrice}&title=${title}&count=${1}`);

                var counterContainer = MakeCounter(@Model.Product.id, 0);
                btns.prepend(counterContainer);

                var product = document.querySelector(`.other-products-item-cart[id="${id}"]`);
                if (product) {
                    var overlay = product.getElementsByClassName('product-overlay')[0];
                    product.classList.add('added');
                    overlay.classList.add('green');
                }

                var counterContainer = document.getElementById(`counterContainer${id}`);
                counterContainer.style.display = 'flex';
                var counterContainerSimilar = document.getElementById(`counterContainerSimilar${id}`);
                if (counterContainerSimilar)
                    counterContainerSimilar.style.display = 'flex';

                var span = document.getElementById(`productSpan${id}`);
                span.textContent = 1;
                var input = document.getElementById(`productInput${id}`);
                input.value = span.textContent;
                var spanSimilar = document.getElementById(`productSimilarSpan${id}`);
                if (spanSimilar)
                    spanSimilar.textContent = 1;
                var inputSimilar = document.getElementById(`productSimilarInput${id}`);
                if (inputSimilar)
                    inputSimilar.value = span.textContent;

                var itemInfo = new CartProduct(id, 1, parsedPrice, title);


                var cart = document.getElementsByClassName('cart-body-items')[0];
                var leftCart = document.getElementById('leftCartItemContainer');

                var item = AddHtmlToCart(itemInfo);
                cart.innerHTML += item;

                item = AddHtmlToLeftCart(itemInfo);
                leftCart.innerHTML += item;

                CheckIfCartIsEmpty();
                SetInputs();
                var sum = UpdateCartValue();
                if (sum > 0)
                    document.querySelector('.cart-text').textContent = sum + ' грн';
            }
        }
        lastClickTime = currentTime;
    };

    function AddToCart(event) {
        var currentTime = new Date().getTime();
        if (currentTime - lastClickTime >= 500) {
            var id = event.target.id;
            var userId = GetUserId();

            if (userId === null) {
                var product = document.querySelector(`.other-products-item-cart[id="${id}"]`);
                var overlay = product.getElementsByClassName('product-overlay')[0];
                product.classList.add('added');
                overlay.classList.add('green');

                var counterContainer = document.getElementById(`counterContainer${id}`);
                if (counterContainer != null)
                    counterContainer.style.display = 'flex';

                var counterContainerSimilar = document.getElementById(`counterContainerSimilar${id}`);
                counterContainerSimilar.style.display = 'flex';

                var btns = document.getElementsByClassName('product-info-buttons')[0];
                var addToCartBtn = btns.getElementsByClassName('product-info-add-to-cart-btn')[0];
                addToCartBtn.style.display = 'none';

                var span = document.getElementById(`productSimilarSpan${id}`);
                span.textContent = 1;
                var input = document.getElementById(`productSimilarInput${id}`);
                input.value = span.textContent;

                var price = document.querySelector(`.main-page-product-bottom-price-promo[id="${id}"]`)
                var parsedPrice = price.textContent.slice(0, -4);
                parsedPrice = parseFloat(parsedPrice.replace(',', '.'));
                var title = product.getElementsByClassName('main-page-product-title')[0].textContent;

                var cartProduct = new CartProduct(id, 1, parsedPrice, title);
                productsInCart.push(cartProduct);
                const jsonString = JSON.stringify(productsInCart);
                document.cookie = `MyCookie=${encodeURIComponent(jsonString)}; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=/; Secure; SameSite=None`;
                console.log(productsInCart);


                var cart = document.getElementsByClassName('cart-body-items')[0];
                var leftCart = document.getElementById('leftCartItemContainer');

                var itemInfo = productsInCart.find(function (element) {
                    return element.id === id;
                });

                var item = AddHtmlToCart(itemInfo);
                cart.insertAdjacentHTML('beforeend', item);

                item = AddHtmlToLeftCart(itemInfo);
                leftCart.insertAdjacentHTML('beforeend', item);


                CheckIfCartIsEmpty();
                SetInputs();
                GetFullPriceForCart();
            }
            else {
                var product = document.querySelector(`.other-products-item-cart[id="${id}"]`);
                var overlay = product.getElementsByClassName('product-overlay')[0];
                var counterContainer = document.getElementById(`counterContainer${id}`);
                var counterContainerSimilar = document.getElementById(`counterContainerSimilar${id}`);
                var btns = document.getElementsByClassName('product-info-buttons')[0];
                var addToCartBtn = btns.getElementsByClassName('product-info-add-to-cart-btn')[0];

                var price = document.querySelector(`.main-page-product-bottom-price-promo[id="${id}"]`)
                var parsedPrice = price.textContent.slice(0, -4);
                parsedPrice = parseFloat(parsedPrice.replace(',', '.'));
                var title = product.getElementsByClassName('main-page-product-title')[0].textContent;

                fetch(`/User/AddUserCartProduct?productId=${id}&userId=${userId}&price=${parsedPrice}&title=${title}&count=${1}`);

                product.classList.add('added');
                overlay.classList.add('green');
                if (counterContainer)
                    counterContainer.style.display = 'flex';
                counterContainerSimilar.style.display = 'flex';
                addToCartBtn.style.display = 'none';

                var span = document.getElementById(`productSimilarSpan${id}`);
                span.textContent = 1;
                var input = document.getElementById(`productSimilarInput${id}`);
                input.value = span.textContent;

                var itemInfo = new CartProduct(id, 1, parsedPrice, title);

                var cart = document.getElementsByClassName('cart-body-items')[0];
                var leftCart = document.getElementById('leftCartItemContainer');

                var item = AddHtmlToCart(itemInfo);
                cart.insertAdjacentHTML('beforeend', item);

                item = AddHtmlToLeftCart(itemInfo);
                leftCart.insertAdjacentHTML('beforeend', item);


                CheckIfCartIsEmpty();
                SetInputs();
                var sum = UpdateCartValue();
                if (sum > 0)
                    document.querySelector('.cart-text').textContent = sum + ' грн';

            }
        }
        lastClickTime = currentTime;
    }

</script>