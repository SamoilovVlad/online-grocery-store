@model ProductsViewModel

<div class="products-view-container">
    <div class="navigation-container">
        <a class="nav-link active" style="text-decoration:none" href="/">Store</a>
        <p class="nav-link-arrow"> > </p>
        <a class="nav-link" style="text-decoration:none" onclick="ShowLoader();" asp-controller="Categories" asp-action="SubcategoriesView" asp-route-categoryName=@Model.products.First().Category>@Model.products.First().Category</a>
        <p class="nav-link-arrow"> > </p>
        <a class="nav-link">@Model.products.First().Subcategory</a>
    </div>
    <div class="products-header-container">
        <div class="products-header-inner">
            <h1 class="products-header">@Model.products.First().Subcategory</h1>
            <div class="products-filter-container-round-count">@Model.productsCount</div>
        </div>
    </div>
    <div class="products-filter-container">
        <div class="filter-left-side">
            <h1 class="products-filter-container-label">@Model.products.First().Subcategory</h1>
            <div class="products-filter-container-round-count">@Model.productsCount</div>
        </div>
        <div class="filter-right-side">
            <a id="checkBox" onclick="CheckBoxPromoProducts()" style="display:flex; align-items:center; text-decoration:none;" asp-controller="Categories" asp-action="ProductsView" asp-route-currentPage="1" asp-route-isOnlySales="@(!Model.onlySales)" asp-route-sortedBy="@Model.sortedBy" asp-route-pageSize="40" asp-route-subcategoryName="@Model.products.First().Subcategory">
                <div class="check-box" style="margin-right:0.5rem;"></div>
                <span class="filter-btn-text" style="margin-right:0.5rem; text-decoration:none;">Акційні товари</span>
            </a>
            <div class="filter-btn" onclick="OpenCloseFilters()">
                <span class="filter-btn-text">@Model.sortedBy</span>
                <span class="filter-btn-icon"><svg style="position:fixed;" width="0.750rem" height="0.750rem" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path d="M11 4L6 9L1 4" stroke="currentColor" stroke-width="1" stroke-linecap="round" stroke-linejoin="round"></path></svg></span>
            </div>
            <div class="filter-drop-down-list">
                <a class="filter-drop-down-list-text" id="1" onclick="SortBy(event)" asp-controller="Categories" asp-action="ProductsView" asp-route-currentPage="1" asp-route-isOnlySales="@Model.onlySales" asp-route-sortedBy="Cтандартно" asp-route-pageSize="40" asp-route-subcategoryName="@Model.products.First().Subcategory">Cтандартно</a>
                <a class="filter-drop-down-list-text" id="2" onclick="SortBy(event)" asp-controller="Categories" asp-action="ProductsView" asp-route-currentPage="1" asp-route-isOnlySales="@Model.onlySales" asp-route-sortedBy="Спочатку акційні" asp-route-pageSize="40" asp-route-subcategoryName="@Model.products.First().Subcategory">Спочатку акційні</a>
                <a class="filter-drop-down-list-text" id="3" onclick="SortBy(event)" asp-controller="Categories" asp-action="ProductsView" asp-route-currentPage="1" asp-route-isOnlySales="@Model.onlySales" asp-route-sortedBy="Спочатку дорожче" asp-route-pageSize="40" asp-route-subcategoryName="@Model.products.First().Subcategory">Спочатку дорожче</a>
                <a class="filter-drop-down-list-text" id="4" onclick="SortBy(event)" asp-controller="Categories" asp-action="ProductsView" asp-route-currentPage="1" asp-route-isOnlySales="@Model.onlySales" asp-route-sortedBy="Спочатку дешевше" asp-route-pageSize="40" asp-route-subcategoryName="@Model.products.First().Subcategory">Спочатку дешевше</a>
                <a class="filter-drop-down-list-text" id="5" onclick="SortBy(event)" asp-controller="Categories" asp-action="ProductsView" asp-route-currentPage="1" asp-route-isOnlySales="@Model.onlySales" asp-route-sortedBy="За знижкою" asp-route-pageSize="40" asp-route-subcategoryName="@Model.products.First().Subcategory">За знижкою</a>
            </div>
        </div>
    </div>
    <div class="products-view-products-container">
        @{
            foreach (var product in Model.products)
            {
                <div class="products-view-product" id="@product.id">
                    <div id="overlay@(product.id)" class="product-overlay @(product.inCart != null ? "green" : "")" onclick="ShowProductMenu('@product.id', '@product.Title', '@product.Price')"></div>
                    @{
                        if (product.Promo != null)
                        {
                            <div class="main-page-product-promo" id="promo@(product.id)">
                                <p class="main-page-product-promo-text">@string.Format("{0:0.00}", product.Promo)</p>
                            </div>
                        }
                    }
                    <div class="main-page-product-favorite" onclick="AddOrRemoveFavoriteProduct(event)">
                        <svg id="@product.id" width="1.000rem" height="0.938rem" viewBox="0 0 16 15" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path id="@product.id" d="M14.1915 7.56097L14.218 7.52031L14.2405 7.47727C14.6216 6.74672 15 5.85591 15 4.9799C15 2.71644 13.5355 1.33759 11.8732 1.07637C10.4691 0.780647 8.956 1.35222 8.01756 2.56858C7.09624 1.31855 5.53247 0.883302 4.17204 1.06957L4.17203 1.06952L4.16182 1.07103C2.48513 1.31826 1 2.70055 1 4.9799C1 5.85591 1.37843 6.74672 1.75955 7.47727L1.782 7.52031L1.80851 7.56097C2.279 8.28247 2.86715 9.13148 3.56752 9.89897C4.82205 11.286 6.35624 12.5732 7.42816 13.3204L8.035 13.7434L8.61708 13.2869C8.64265 13.2668 8.66858 13.2465 8.69484 13.2259C9.69949 12.4384 11.1982 11.2636 12.4324 9.89901C13.1328 9.13152 13.721 8.28248 14.1915 7.56097Z" fill="transparent" stroke="currentColor" stroke-width="1"></path></svg>
                    </div>
                    @{
                        var imagePath = $"/Product_Images/product_{product.id}.jpg";
                        <img style="width:100%; object-fit:contain; object-position:center; height:55%" src="@imagePath" />
                    }
                    <span class="main-page-product-title" id="mainPageProductTitle@(product.id)" style="word-break:break-word; white-space:pre-wrap; margin-top:10px;">@product.Title</span>
                    <span class="main-page-product-mass">@product.Brand</span>
                    <div class="main-page-product-bottom">
                        @{
                            if (product.Promo != null)
                            {
                                <span class="main-page-product-bottom-price-promo" id="@product.id">@product.Price грн</span>
                            }
                            else
                            {
                                <span class="main-page-product-bottom-price" id="@product.id">@product.Price грн</span>
                            }
                        }

                        <span class="main-page-product-bottom-price-brand">@product.Country</span>
                    </div>

                    @{
                        if (product.inCart == null)
                        {
                            <div class="main-page-product-counter-container" id="counterContainer@(product.id)">
                                <svg id="@product.id" onclick="Minus(event)" width="2.5rem" height="2.5rem" viewBox="0 0 32 32" fill="none" cursor="pointer" xmlns="http://www.w3.org/2000/svg" class=""><rect id="@product.id" x="22" y="15" width="2" height="12" rx="1" transform="rotate(90 22 15)" fill="currentColor"></rect></svg>
                                <div class="main-page-product-counter-container-count">
                                    <input id="productInput@(product.id)" type="text" inputmode="numeric" maxlength="3" oninput="this.value = this.value.replace(/[^0-9]/g, '');" value="" class="num-input-product">
                                    <span id="productSpan@(product.id)" class="cart-body-item-info-count-btn-counter-num"></span>
                                    <span class="cart-body-item-info-count-btn-counter-text-product">шт</span>
                                </div>
                                <svg id="@product.id" onclick="Plus(event)" width="2.5rem" height="2.5rem" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg" cursor="pointer" style="justify-self:end;"><rect id="@product.id" x="15" y="10" width="2" height="12" rx="1" fill="currentColor"></rect><rect id="@product.id" x="22" y="15" width="2" height="12" rx="1" transform="rotate(90 22 15)" fill="currentColor"></rect></svg>
                            </div>
                        }
                        else
                        {
                            <div class="main-page-product-counter-container" id="counterContainer@(product.id)" style="display:flex;">
                                <svg id="@product.id" onclick="Minus(event)" width="2.5rem" height="2.5rem" viewBox="0 0 32 32" fill="none" cursor="pointer" xmlns="http://www.w3.org/2000/svg" class=""><rect id="@product.id" x="22" y="15" width="2" height="12" rx="1" transform="rotate(90 22 15)" fill="currentColor"></rect></svg>
                                <div class="main-page-product-counter-container-count">
                                    <input id="productInput@(product.id)" type="text" inputmode="numeric" maxlength="3" oninput="this.value = this.value.replace(/[^0-9]/g, '');" value="@product.inCart.count" class="num-input-product">
                                    <span id="productSpan@(product.id)" class="cart-body-item-info-count-btn-counter-num">@product.inCart.count</span>
                                    <span class="cart-body-item-info-count-btn-counter-text-product">шт</span>
                                </div>
                                <svg id="@product.id" onclick="Plus(event)" width="2.5rem" height="2.5rem" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg" cursor="pointer" style="justify-self:end;"><rect id="@product.id" x="15" y="10" width="2" height="12" rx="1" fill="currentColor"></rect><rect id="@product.id" x="22" y="15" width="2" height="12" rx="1" transform="rotate(90 22 15)" fill="currentColor"></rect></svg>
                            </div>
                        }
                    }
                    <div class="main-page-product-cart-btn" id="@product.id">
                        <i class="fa-solid fa-cart-shopping" style="color: #ffffff;font-size: 1.5rem;" onclick="AddToCart(event)" id="@product.id"></i>
                    </div>
                </div>

                <div class="product-menu">
                    <svg id="close-icon-product-menu" onclick="CloseProductMenu()" xmlns="http://www.w3.org/2000/svg" height="1.5rem" viewBox="0 0 384 512">
                        <style type="text/css">
                            #close-icon-product-menu {
                                fill: #000000;
                                margin-left: auto;
                                cursor: pointer;
                            }</style>
                        <path d="M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z" />
                    </svg>
                    <div id="ImageContainer">
                        <img class="product-menu-img" src="@imagePath">
                    </div>
                    <div class="product-menu-title-section">
                        <div id="productTitle">@product.Title</div>
                        <div class="product-info-add-to-favorites-btn" onclick="AddOrRemoveFavoriteProduct3(event)" id=""><svg width="1.000rem" height="0.938rem" viewBox="0 0 16 15" fill="none" xmlns="http://www.w3.org/2000/svg" class="" id=""><path id="" d="M14.1915 7.56097L14.218 7.52031L14.2405 7.47727C14.6216 6.74672 15 5.85591 15 4.9799C15 2.71644 13.5355 1.33759 11.8732 1.07637C10.4691 0.780647 8.956 1.35222 8.01756 2.56858C7.09624 1.31855 5.53247 0.883302 4.17204 1.06957L4.17203 1.06952L4.16182 1.07103C2.48513 1.31826 1 2.70055 1 4.9799C1 5.85591 1.37843 6.74672 1.75955 7.47727L1.782 7.52031L1.80851 7.56097C2.279 8.28247 2.86715 9.13148 3.56752 9.89897C4.82205 11.286 6.35624 12.5732 7.42816 13.3204L8.035 13.7434L8.61708 13.2869C8.64265 13.2668 8.66858 13.2465 8.69484 13.2259C9.69949 12.4384 11.1982 11.2636 12.4324 9.89901C13.1328 9.13152 13.721 8.28248 14.1915 7.56097Z" fill="transparent" stroke="currentColor" stroke-width="1"></path></svg></div>
                    </div>
                    <div class="product-menu-price-section">
                        <div id="productPrice">@product.Price</div>
                        <p id="price-text">грн</p>
                    </div>
                    <div class="product-menu-buttons">
                        <a class="product-menu-add-to-cart-btn"><p class="product-menu-add-to-cart-btn-text" style="font-weight:400;" onclick="AddToCartMenu(event)">Додати в кошик</p></a>
                        <a class="product-menu-more-info-btn" href="" onclick="ShowLoader()">
                            <p style="font-weight:400;">Детальніше</p>
                        </a>
                    </div>
                </div>
            }
        }
    </div>
    <div class="pagenated-btn-container">
        @if (Model.currentPage > 1)
        {
            <a class="pagenated-btn-arrow" asp-controller="Categories" asp-action="ProductsView" asp-route-currentPage="@(Model.currentPage + 1)" asp-route-isOnlySales="@Model.onlySales" asp-route-sortedBy="@Model.sortedBy" asp-route-pageSize="40" asp-route-subcategoryName="@Model.products.First().Subcategory">
                <svg width="0.750rem" height="0.750rem" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path d="M8 11L3 6L8 1" stroke="currentColor" stroke-width="1" stroke-linecap="round" stroke-linejoin="round"></path></svg>
            </a>
        }
        else
        {
            <a class="pagenated-btn-arrow">
                <svg width="0.750rem" height="0.750rem" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path d="M8 11L3 6L8 1" stroke="currentColor" stroke-width="1" stroke-linecap="round" stroke-linejoin="round"></path></svg>
            </a>
        }
        <a class="pagenated-btn-first" asp-controller="Categories" asp-action="ProductsView" asp-route-currentPage="1" asp-route-isOnlySales="@Model.onlySales" asp-route-sortedBy="@Model.sortedBy" asp-route-pageSize="40" asp-route-subcategoryName="@Model.products.First().Subcategory">1</a>
        @if (Model.currentPage == 1)
        {
            <a class="pagenated-btn" asp-controller="Categories" asp-action="ProductsView" asp-route-currentPage="1" asp-route-isOnlySales="@Model.onlySales" asp-route-sortedBy="@Model.sortedBy" asp-route-pageSize="40" asp-route-subcategoryName="@Model.products.First().Subcategory"></a>
            <a class="pagenated-btn" asp-controller="Categories" asp-action="ProductsView" asp-route-currentPage="2" asp-route-isOnlySales="@Model.onlySales" asp-route-sortedBy="@Model.sortedBy" asp-route-pageSize="40" asp-route-subcategoryName="@Model.products.First().Subcategory"></a>
            <a class="pagenated-btn" asp-controller="Categories" asp-action="ProductsView" asp-route-currentPage="3" asp-route-isOnlySales="@Model.onlySales" asp-route-sortedBy="@Model.sortedBy" asp-route-pageSize="40" asp-route-subcategoryName="@Model.products.First().Subcategory"></a>

        }
        else if (Model.currentPage == Model.pageNumber && Model.currentPage == 2)
        {
            <a class="pagenated-btn" asp-controller="Categories" asp-action="ProductsView" asp-route-currentPage="@(Model.currentPage - 1)" asp-route-isOnlySales="@Model.onlySales" asp-route-sortedBy="@Model.sortedBy" asp-route-pageSize="40" asp-route-subcategoryName="@Model.products.First().Subcategory"></a>
            <a class="pagenated-btn" asp-controller="Categories" asp-action="ProductsView" asp-route-currentPage="@(Model.currentPage)" asp-route-isOnlySales="@Model.onlySales" asp-route-sortedBy="@Model.sortedBy" asp-route-pageSize="40" asp-route-subcategoryName="@Model.products.First().Subcategory"></a>
            <a class="pagenated-btn" asp-controller="Categories" asp-action="ProductsView" asp-route-currentPage="@Model.currentPage" asp-route-isOnlySales="@Model.onlySales" asp-route-sortedBy="@Model.sortedBy" asp-route-pageSize="40" asp-route-subcategoryName="@Model.products.First().Subcategory"></a>

        }
        else if (Model.currentPage == Model.pageNumber)
        {
            <a class="pagenated-btn" asp-controller="Categories" asp-action="ProductsView" asp-route-currentPage="@(Model.currentPage - 2)" asp-route-isOnlySales="@Model.onlySales" asp-route-sortedBy="@Model.sortedBy" asp-route-pageSize="40" asp-route-subcategoryName="@Model.products.First().Subcategory"></a>
            <a class="pagenated-btn" asp-controller="Categories" asp-action="ProductsView" asp-route-currentPage="@(Model.currentPage - 1)" asp-route-isOnlySales="@Model.onlySales" asp-route-sortedBy="@Model.sortedBy" asp-route-pageSize="40" asp-route-subcategoryName="@Model.products.First().Subcategory"></a>
            <a class="pagenated-btn" asp-controller="Categories" asp-action="ProductsView" asp-route-currentPage="@Model.currentPage" asp-route-isOnlySales="@Model.onlySales" asp-route-sortedBy="@Model.sortedBy" asp-route-pageSize="40" asp-route-subcategoryName="@Model.products.First().Subcategory"></a>

        }
        else
        {
            <a class="pagenated-btn" asp-controller="Categories" asp-action="ProductsView" asp-route-currentPage="@(Model.currentPage - 1)" asp-route-isOnlySales="@Model.onlySales" asp-route-sortedBy="@Model.sortedBy" asp-route-pageSize="40" asp-route-subcategoryName="@Model.products.First().Subcategory"></a>
            <a class="pagenated-btn" asp-controller="Categories" asp-action="ProductsView" asp-route-currentPage="@Model.currentPage" asp-route-isOnlySales="@Model.onlySales" asp-route-sortedBy="@Model.sortedBy" asp-route-pageSize="40" asp-route-subcategoryName="@Model.products.First().Subcategory"></a>
            <a class="pagenated-btn" asp-controller="Categories" asp-action="ProductsView" asp-route-currentPage="@(Model.currentPage + 1)" asp-route-isOnlySales="@Model.onlySales" asp-route-sortedBy="@Model.sortedBy" asp-route-pageSize="40" asp-route-subcategoryName="@Model.products.First().Subcategory"></a>
        }
        <a class="pagenated-btn-last" asp-controller="Categories" asp-action="ProductsView" asp-route-currentPage="@Model.pageNumber" asp-route-isOnlySales="@Model.onlySales" asp-route-sortedBy="@Model.sortedBy" asp-route-pageSize="40" asp-route-subcategoryName="@Model.products.First().Subcategory">@Model.pageNumber</a>

        @if (Model.currentPage < Model.pageNumber)
        {
            <a class="pagenated-btn-arrow" asp-controller="Categories" asp-action="ProductsView" asp-route-currentPage="@(Model.currentPage + 1)" asp-route-isOnlySales="@Model.onlySales" asp-route-sortedBy="@Model.sortedBy" asp-route-pageSize="40" asp-route-subcategoryName="@Model.products.First().Subcategory">
                <svg style="transform: rotate(180deg)" width="0.750rem" height="0.750rem" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path d="M8 11L3 6L8 1" stroke="currentColor" stroke-width="1" stroke-linecap="round" stroke-linejoin="round"></path></svg>
            </a>
        }
        else
        {
            <a class="pagenated-btn-arrow">
                <svg style="transform: rotate(180deg)" width="0.750rem" height="0.750rem" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path d="M8 11L3 6L8 1" stroke="currentColor" stroke-width="1" stroke-linecap="round" stroke-linejoin="round"></path></svg>
            </a>
        }
    </div>
</div>
<script>
    var isFilterOpen = false;
    var isCheckBox = !@Model.onlySales.ToString().ToLower();
    var pageNumber = @Model.pageNumber;
    var currentPage = @Model.currentPage;
    var midleBtns = document.getElementsByClassName('pagenated-btn');
    midleBtns = Array.from(midleBtns);
    var firstBtn = document.getElementsByClassName('pagenated-btn-first')[0];
    var lastBtn = document.getElementsByClassName('pagenated-btn-last')[0];
    var arrowBtns = document.getElementsByClassName('pagenated-btn-arrow');
    var choosenFilter = document.getElementsByClassName('filter-drop-down-list-text');
    choosenFilter = Array.from(choosenFilter);
    arrowBtns = Array.from(arrowBtns);
    var overlay = document.querySelector('body');

    document.addEventListener('DOMContentLoaded', function () {
        CheckBoxPromoProducts()
        SetPagenatedBtns();
        SetPageNumbers();
        SetPagenatedArrowBtns();
        $('#skeleton').hide();
        console.log('s');
    });

    function ShowProductMenu(id, title, price) {

        var userId = GetUserId();

        if (userId === null) {
            var menu = document.getElementsByClassName('product-menu')[0];
            var btns = menu.getElementsByClassName('product-menu-buttons')[0];
            var addToCartBtn = menu.getElementsByClassName('product-menu-add-to-cart-btn')[0];
            var btnText = document.getElementsByClassName('product-menu-add-to-cart-btn-text')[0];
            btnText.id = id;
            var counterContainer = menu.getElementsByClassName('product-menu-counter-container')[0];
            var index = productsInCart.findIndex(function (element) {
                return element.id === id;
            });
            console.log(1);
            if (index == -1) {
                if (counterContainer != null)
                    btns.removeChild(counterContainer);
                addToCartBtn.style.display = 'flex';
            }
            else {
                addToCartBtn.style.display = 'none';

                var tempDiv = MakeCounter(id);

                while (tempDiv.firstChild) {
                    btns.prepend(tempDiv.firstChild);
                }
                var inputMenu = document.getElementById(`productInputMenu${id}`);
                inputMenu.addEventListener('input', () => {
                    var id = inputMenu.id.replace(/\D/g, '');
                    var input = document.getElementById("cartInput" + id);
                    var span = document.getElementById("cartSpan" + id);
                    var productSpan = document.getElementById("productSpan" + id);
                    var productInput = document.getElementById("productInput" + id);
                    var productSpanMenu = document.getElementById("productSpanMenu" + id);
                    var index = productsInCart.findIndex(function (element) {
                        return element.id === id;
                    });
                    productsInCart[index].count = inputMenu.value;
                    input.value = productsInCart[index].count;
                    span.textContent = productsInCart[index].count;
                    productSpan.textContent = productsInCart[index].count;
                    productInput.value = productsInCart[index].count;
                    productSpanMenu.textContent = productsInCart[index].count;
                    inputMenu.value = productsInCart[index].count;

                    const jsonString = JSON.stringify(productsInCart);
                    document.cookie = `MyCookie=${encodeURIComponent(jsonString)}; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=/; Secure; SameSite=None`;

                    var item = document.getElementById(`cart-body-item${id}`);
                    var price = item.getElementsByClassName('cart-body-item-controls-price-primary')[0];
                    price.textContent = (productsInCart[index].count * productsInCart[index].price).toFixed(2) + ' грн';
                    document.querySelector('.cart-text').textContent = GetFullPriceForCart() + ' грн';
                    GetFullPriceForCart();
                });
            }
            menu.style.right = '0.5rem';
            menu.style.visibility = "visible";
            menu.style.opacity = "1";

            $("body").addClass("overlay");
            document.getElementsByClassName('footer-container')[0].style.zIndex = '0';
            isProductMenuShowing = true;

            var img = menu.getElementsByClassName('product-menu-img')[0];
            img.src = `/Product_Images/product_${id}.jpg`;

            var title = document.getElementById('productTitle');
            title.textContent = document.getElementById(`mainPageProductTitle${id}`).textContent;
            var price = document.getElementById('productPrice');
            var productPrice = document.querySelector(`.main-page-product-bottom-price[id="${id}"]`);
            if (productPrice == null)
                productPrice = document.querySelector(`.main-page-product-bottom-price-promo[id="${id}"]`);
            price.textContent = productPrice.textContent;
            var detail = document.getElementsByClassName('product-menu-more-info-btn')[0];
            detail.href = `/Home/ProductView?id=${id}`;
        }
        else {
            var menu = document.getElementsByClassName('product-menu')[0];
            var btns = menu.getElementsByClassName('product-menu-buttons')[0];
            var addToCartBtn = menu.getElementsByClassName('product-menu-add-to-cart-btn')[0];
            var btnText = document.getElementsByClassName('product-menu-add-to-cart-btn-text')[0];
            btnText.id = id;
            var counterContainer = menu.getElementsByClassName('product-menu-counter-container')[0];

            fetch(`/User/GetUserCartProductCount?productId=${id}&userId=${userId}`)
                .then(response => response.json())
                .then(data => {
                    if (data == 0) {
                        if (counterContainer != null)
                            btns.removeChild(counterContainer);
                        addToCartBtn.style.display = 'flex';
                    }
                    else {
                        addToCartBtn.style.display = 'none';

                        var tempDiv = MakeCounter(id, data);

                        while (tempDiv.firstChild) {
                            btns.prepend(tempDiv.firstChild);
                        }
                        var inputMenu = document.getElementById(`productInputMenu${id}`);
                        inputMenu.addEventListener('blur', OnBlurSaveUserCartProduct);
                        inputMenu.addEventListener('input', () => {
                            var id = inputMenu.id.replace(/\D/g, '');
                            var input = document.getElementById("cartInput" + id);
                            var span = document.getElementById("cartSpan" + id);
                            var productSpan = document.getElementById("productSpan" + id);
                            var productInput = document.getElementById("productInput" + id);
                            var productSpanMenu = document.getElementById("productSpanMenu" + id);

                            input.value = inputMenu.value;
                            span.textContent = inputMenu.value;
                            productSpan.textContent = inputMenu.value;
                            productInput.value = inputMenu.value;
                            productSpanMenu.textContent = inputMenu.value;
                            inputMenu.value = inputMenu.value;

                            var item = document.getElementById(`cart-body-item${id}`);
                            var price = item.getElementsByClassName('cart-body-item-controls-price-primary')[0];
                            price.textContent = (inputMenu.value * price).toFixed(2) + ' грн';
                            var sum = UpdateCartValue();
                            document.querySelector('.cart-text').textContent = sum + ' грн';
                        });
                    }
                    menu.style.right = '0.5rem';
                    menu.style.visibility = "visible";
                    menu.style.opacity = "1";
                    $("body").addClass("overlay");
                    document.getElementsByClassName('footer-container')[0].style.zIndex = '0';
                    isProductMenuShowing = true;

                    var img = menu.getElementsByClassName('product-menu-img')[0];
                    img.src = `/Product_Images/product_${id}.jpg`;

                    var title = document.getElementById('productTitle');
                    title.textContent = document.getElementById(`mainPageProductTitle${id}`).textContent;
                    var price = document.getElementById('productPrice');
                    var productPrice = document.querySelector(`.main-page-product-bottom-price[id="${id}"]`);
                    if (productPrice == null)
                        productPrice = document.querySelector(`.main-page-product-bottom-price-promo[id="${id}"]`);
                    price.textContent = productPrice.textContent;
                    var detail = document.getElementsByClassName('product-menu-more-info-btn')[0];
                    detail.href = `/Home/ProductView?id=${id}`;
                })
        }
        var favoriteBtn = document.querySelector('.product-info-add-to-favorites-btn');
        var path = favoriteBtn.querySelector('path');
        var svg = favoriteBtn.querySelector(`svg`);
        favoriteBtn.id = `a${id}`;
        svg.id = `a${id}`;
        path.id = `a${id}`;
        var heart = document.querySelector(`path[id="${id}"]`);
        if (heart.classList.contains('active')) {
            favoriteBtn.classList.add('active');
            path.classList.add('active');
        }
        else {
            favoriteBtn.classList.remove('active');
            path.classList.remove('active');
        }
    }

    function MakeCounter(id, count = 0) {
        var userId = GetUserId();
        if (userId === null) {
            var counter;
            var index = productsInCart.findIndex(function (element) {
                return element.id === id;
            });
            if (productsInCart[index] == undefined) {
                counter = `<div class="product-menu-counter-container" id="counterContainerMenu${id}" style="display:flex; position:relative" height: 50px;>
                                                                                                                                        <svg id="${id}" onclick="MinusInMenu(event)" width="2.5rem" height="50px" viewBox="0 0 32 32" fill="none" cursor="pointer" xmlns="http://www.w3.org/2000/svg" class=""><rect id="${id}" x="22" y="15" width="2" height="12" rx="1" transform="rotate(90 22 15)" fill="currentColor"></rect></svg>
                                                                                                                                        <div class="main-page-product-counter-container-count">
                                                                                                                                                <input id="productInputMenu${id}" type="text" inputmode="numeric" maxlength="3" oninput="this.value = this.value.replace(/[^0-9]/g, '');" value="1" style="margin-top:2px;" class="num-input-product">
                                                                                                                                                    <span id="productSpanMenu${id}" class="cart-body-item-info-count-btn-counter-num">$"1"</span>
                                                                                                                                            <span class="cart-body-item-info-count-btn-counter-text-product">шт</span>
                                                                                                                                        </div>
                                                                                                                                                    <svg id="${id}" onclick="PlusInMenu(event)" width="2.5rem" height="50px" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg" cursor="pointer" style="justify-self:end;"><rect id="${id}" x="15" y="10" width="2" height="12" rx="1" fill="currentColor"></rect><rect id="${id}" x="22" y="15" width="2" height="12" rx="1" transform="rotate(90 22 15)" fill="currentColor"></rect></svg>
                                                                                                                                    </div>`;
            }
            else {
                counter = `<div class="product-menu-counter-container" id="counterContainerMenu${id}" style="display:flex; position:relative" height: 50px;>
                                                                                                                                    <svg id="${id}" onclick="MinusInMenu(event)" width="2.5rem" height="50px" viewBox="0 0 32 32" fill="none" cursor="pointer" xmlns="http://www.w3.org/2000/svg" class=""><rect id="${id}" x="22" y="15" width="2" height="12" rx="1" transform="rotate(90 22 15)" fill="currentColor"></rect></svg>
                                                                                                                                    <div class="main-page-product-counter-container-count">
                                                                                                                                            <input id="productInputMenu${id}" type="text" inputmode="numeric" maxlength="3" oninput="this.value = this.value.replace(/[^0-9]/g, '');" value="${productsInCart[index].count}" style="margin-top:2px;" class="num-input-product">
                                                                                                                                                <span id="productSpanMenu${id}" class="cart-body-item-info-count-btn-counter-num">${productsInCart[index].count}"</span>
                                                                                                                                        <span class="cart-body-item-info-count-btn-counter-text-product">шт</span>
                                                                                                                                    </div>
                                                                                                                                                <svg id="${id}" onclick="PlusInMenu(event)" width="2.5rem" height="50px" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg" cursor="pointer" style="justify-self:end;"><rect id="${id}" x="15" y="10" width="2" height="12" rx="1" fill="currentColor"></rect><rect id="${id}" x="22" y="15" width="2" height="12" rx="1" transform="rotate(90 22 15)" fill="currentColor"></rect></svg>
                                                                                                                                </div>`;
            }
            var tempDiv = document.createElement('div');
            tempDiv.innerHTML = counter;
            return tempDiv;
        }
        else {
            if (count > 0) {
                counter = `<div class="product-menu-counter-container" id="counterContainerMenu${id}" style="display:flex; position:relative" height: 50px;>
                                                                                                                                        <svg id="${id}" onclick="MinusInMenu(event)" width="2.5rem" height="50px" viewBox="0 0 32 32" fill="none" cursor="pointer" xmlns="http://www.w3.org/2000/svg" class=""><rect id="${id}" x="22" y="15" width="2" height="12" rx="1" transform="rotate(90 22 15)" fill="currentColor"></rect></svg>
                                                                                                                                        <div class="main-page-product-counter-container-count">
                                                                                                                                                <input id="productInputMenu${id}" type="text" inputmode="numeric" maxlength="3" oninput="this.value = this.value.replace(/[^0-9]/g, '');" value="${count}" style="margin-top:2px;" class="num-input-product">
                                                                                                                                                    <span id="productSpanMenu${id}" class="cart-body-item-info-count-btn-counter-num">${count}"</span>
                                                                                                                                            <span class="cart-body-item-info-count-btn-counter-text-product">шт</span>
                                                                                                                                        </div>
                                                                                                                                                    <svg id="${id}" onclick="PlusInMenu(event)" width="2.5rem" height="50px" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg" cursor="pointer" style="justify-self:end;"><rect id="${id}" x="15" y="10" width="2" height="12" rx="1" fill="currentColor"></rect><rect id="${id}" x="22" y="15" width="2" height="12" rx="1" transform="rotate(90 22 15)" fill="currentColor"></rect></svg>
                                                                                                                                    </div>`;
            }
            else {
                counter = `<div class="product-menu-counter-container" id="counterContainerMenu${id}" style="display:flex; position:relative" height: 50px;>
                                                                                                                                            <svg id="${id}" onclick="MinusInMenu(event)" width="2.5rem" height="50px" viewBox="0 0 32 32" fill="none" cursor="pointer" xmlns="http://www.w3.org/2000/svg" class=""><rect id="${id}" x="22" y="15" width="2" height="12" rx="1" transform="rotate(90 22 15)" fill="currentColor"></rect></svg>
                                                                                                                                            <div class="main-page-product-counter-container-count">
                                                                                                                                                    <input id="productInputMenu${id}" type="text" inputmode="numeric" maxlength="3" oninput="this.value = this.value.replace(/[^0-9]/g, '');" value="1" style="margin-top:2px;" class="num-input-product">
                                                                                                                                                        <span id="productSpanMenu${id}" class="cart-body-item-info-count-btn-counter-num">$"1"</span>
                                                                                                                                                <span class="cart-body-item-info-count-btn-counter-text-product">шт</span>
                                                                                                                                            </div>
                                                                                                                                                        <svg id="${id}" onclick="PlusInMenu(event)" width="2.5rem" height="50px" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg" cursor="pointer" style="justify-self:end;"><rect id="${id}" x="15" y="10" width="2" height="12" rx="1" fill="currentColor"></rect><rect id="${id}" x="22" y="15" width="2" height="12" rx="1" transform="rotate(90 22 15)" fill="currentColor"></rect></svg>
                                                                                                                                        </div>`;
            }
            var tempDiv = document.createElement('div');
            tempDiv.innerHTML = counter;
            return tempDiv;
        }
    }

    var lastClickTime = 0;

    function PlusInMenu(event) {
        var currentTime = new Date().getTime();

        if (currentTime - lastClickTime >= 500) {
            var span = document.getElementById("cartSpan" + event.target.id);
            var input = document.getElementById("cartInput" + event.target.id);
            var productSpan = document.getElementById("productSpan" + event.target.id);
            var productInput = document.getElementById("productInput" + event.target.id);
            var productSpanMenu = document.getElementById("productSpanMenu" + event.target.id);
            var productInputMenu = document.getElementById("productInputMenu" + event.target.id);
            var userId = GetUserId();

            if (userId === null) {
                var index = productsInCart.findIndex(function (element) {
                    return element.id === event.target.id;
                });
                if (productsInCart[index].count < 999) {
                    var index = productsInCart.findIndex(function (element) {
                        return element.id === event.target.id;
                    });
                    productsInCart[index].count -= -1;

                    productInputMenu.value = productsInCart[index].count;
                    productSpanMenu.textContent = productsInCart[index].count;
                    span.textContent = productsInCart[index].count;
                    if (productSpan != null)
                        productSpan.textContent = productsInCart[index].count;
                    input.value = productsInCart[index].count;
                    if (productInput != null)
                        productInput.value = productsInCart[index].count;


                    const jsonString = JSON.stringify(productsInCart);
                    document.cookie = `MyCookie=${encodeURIComponent(jsonString)}; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=/; Secure; SameSite=None`;

                    var item = document.getElementById(`cart-body-item${event.target.id}`);
                    var price = item.getElementsByClassName('cart-body-item-controls-price-primary')[0];
                    price.textContent = (productsInCart[index].count * productsInCart[index].price).toFixed(2) + ' грн';
                    GetFullPriceForCart();

                    var cartText = document.getElementsByClassName('cart-text')[0];
                    cartText.textContent = GetCartValue() + ' грн';
                    lastClickTime = currentTime;
                }
            }
            else {
                if (input.value < 999) {
                    input.value -= -1;

                    fetch(`/User/UpdateUserCartProduct?productId=${event.target.id}&userId=${userId}&count=${input.value}`);

                    productInputMenu.value = input.value;
                    productSpanMenu.textContent = input.value;
                    span.textContent = input.value;
                    if (productSpan != null)
                        productSpan.textContent = input.value;
                    input.value = input.value;
                    if (productInput != null)
                        productInput.value = input.value;

                    var item = document.getElementById(`cart-body-item${event.target.id}`);
                    var pricePerProduct = item.getElementsByClassName('cart-body-item-controls-price-secondary')[0].textContent;
                    if (pricePerProduct.length === 0)
                        pricePerProduct = item.getElementsByClassName('cart-body-item-controls-price-promo')[0].textContent;
                    var match = pricePerProduct.match(/\d+(\.\d+)?/);
                    pricePerProduct = parseFloat(match[0]);

                    var price = item.querySelector('.cart-body-item-controls-price-primary');
                    price.textContent = (input.value * pricePerProduct).toFixed(2) + ' грн';
                    var sum = UpdateCartValue();

                    var cartText = document.querySelector('.cart-text');
                    cartText.textContent = sum + ' грн';
                    lastClickTime = currentTime;
                }
            }
        }
    }

    function MinusInMenu(event) {
        var currentTime = new Date().getTime();

        if (currentTime - lastClickTime >= 500) {
            var span = document.getElementById("cartSpan" + event.target.id);
            var input = document.getElementById("cartInput" + event.target.id);
            var productSpan = document.getElementById("productSpan" + event.target.id);
            var productInput = document.getElementById("productInput" + event.target.id);
            var productSpanMenu = document.getElementById("productSpanMenu" + event.target.id);
            var productInputMenu = document.getElementById("productInputMenu" + event.target.id);
            var userId = GetUserId();

            if (userId === null) {
                var index = productsInCart.findIndex(function (element) {
                    return element.id === event.target.id;
                });
                productsInCart[index].count -= 1;

                if (productsInCart[index].count > 0) {

                    productInputMenu.value = productsInCart[index].count;
                    productSpanMenu.textContent = productsInCart[index].count;
                    span.textContent = productsInCart[index].count;
                    if (productSpan != null)
                        productSpan.textContent = productsInCart[index].count;
                    input.value = productsInCart[index].count;
                    if (productInput != null)
                        productInput.value = productsInCart[index].count;

                    const jsonString = JSON.stringify(productsInCart);
                    document.cookie = `MyCookie=${encodeURIComponent(jsonString)}; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=/; Secure; SameSite=None`;

                    var item = document.getElementById(`cart-body-item${event.target.id}`);
                    var price = item.getElementsByClassName('cart-body-item-controls-price-primary')[0];
                    price.textContent = (productsInCart[index].count * productsInCart[index].price).toFixed(2) + ' грн';
                    GetFullPriceForCart();

                    var cartText = document.getElementsByClassName('cart-text')[0];
                    cartText.textContent = GetCartValue() + ' грн';

                    lastClickTime = currentTime;
                }

                else {
                    productsInCart.splice(index, 1);
                    var counter = document.getElementById(`counterContainer${event.target.id}`);
                    if (counter != null)
                        counter.style.display = 'none';
                    var overlay = document.getElementById(`overlay${event.target.id}`);
                    if (overlay != null)
                        overlay.classList.remove('green');
                    var cart = document.getElementsByClassName('cart-body-items')[0];
                    var elementToRemove = document.getElementById(`cart-body-item${event.target.id}`);
                    cart.removeChild(elementToRemove);
                    var btns = document.getElementsByClassName('product-menu-buttons')[0];
                    var counterContainer = document.getElementsByClassName('product-menu-counter-container')[0];
                    btns.removeChild(counterContainer);
                    var addToCartBtn = document.getElementsByClassName('product-menu-add-to-cart-btn')[0];
                    addToCartBtn.style.display = 'flex';
                    var leftCart = document.getElementById('leftCartItemContainer');
                    leftCart.removeChild(document.getElementById(`leftCartItem${event.target.id}`));

                    const jsonString = JSON.stringify(productsInCart);
                    document.cookie = `MyCookie=${encodeURIComponent(jsonString)}; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=/; Secure; SameSite=None`;

                    CheckIfCartIsEmpty();
                    GetFullPriceForCart();

                    lastClickTime = currentTime
                }
            }
            else {
                input.value -= 1;

                if (input.value > 0) {
                    productInputMenu.value = input.value;
                    productSpanMenu.textContent = input.value;
                    span.textContent = input.value;
                    if (productSpan != null)
                        productSpan.textContent = input.value;
                    input.value = input.value;
                    if (productInput != null)
                        productInput.value = input.value;

                    fetch(`/User/UpdateUserCartProduct?productId=${event.target.id}&userId=${userId}&count=${input.value}`);

                    var item = document.getElementById(`cart-body-item${event.target.id}`);
                    var pricePerProduct = item.getElementsByClassName('cart-body-item-controls-price-secondary')[0].textContent;
                    if (pricePerProduct.length === 0)
                        pricePerProduct = item.getElementsByClassName('cart-body-item-controls-price-promo')[0].textContent;
                    var match = pricePerProduct.match(/\d+(\.\d+)?/);
                    pricePerProduct = parseFloat(match[0]);

                    var price = item.querySelector('.cart-body-item-controls-price-primary');
                    price.textContent = (input.value * pricePerProduct).toFixed(2) + ' грн';
                    var sum = UpdateCartValue();

                    var cartText = document.querySelector('.cart-text');
                    cartText.textContent = sum + ' грн';
                    lastClickTime = currentTime;
                }

                else {
                    fetch(`/User/DeleteUserCartProduct?productId=${event.target.id}&userId=${userId}`);

                    var counter = document.getElementById(`counterContainer${event.target.id}`);
                    if (counter != null)
                        counter.style.display = 'none';
                    var overlay = document.getElementById(`overlay${event.target.id}`);
                    if (overlay != null)
                        overlay.classList.remove('green');
                    var cart = document.getElementsByClassName('cart-body-items')[0];
                    var elementToRemove = document.getElementById(`cart-body-item${event.target.id}`);
                    cart.removeChild(elementToRemove);
                    var btns = document.getElementsByClassName('product-menu-buttons')[0];
                    var counterContainer = document.getElementsByClassName('product-menu-counter-container')[0];
                    btns.removeChild(counterContainer);
                    var addToCartBtn = document.getElementsByClassName('product-menu-add-to-cart-btn')[0];
                    addToCartBtn.style.display = 'flex';
                    var leftCart = document.getElementById('leftCartItemContainer');
                    leftCart.removeChild(document.getElementById(`leftCartItem${event.target.id}`));

                    CheckIfCartIsEmpty();
                    var sum = UpdateCartValue();

                    var cartText = document.querySelector('.cart-text');
                    cartText.textContent = sum + ' грн';
                }
            }

        }
    }

    function AddToCartMenu(event) {
        var currentTime = new Date().getTime();
        if (currentTime - lastClickTime >= 500) {
            var id = event.target.id;
            var userId = GetUserId();

            if (userId === null) {
                var product = document.querySelector(`.products-view-product[id="${id}"]`);
                var overlay = document.getElementById(`overlay${id}`);
                product.classList.add('added');
                overlay.classList.add('green');
                var btns = document.getElementsByClassName('product-menu-buttons')[0];
                var addToCartBtn = document.getElementsByClassName('product-menu-add-to-cart-btn')[0];
                addToCartBtn.style.display = 'none';
                var counter = MakeCounter(id);
                while (counter.firstChild) {
                    btns.prepend(counter.firstChild);
                }

                var counterContainer = document.getElementById(`counterContainer${id}`);
                counterContainer.style.display = 'flex';

                var span = document.getElementById(`productSpan${id}`);
                span.textContent = 1;
                var input = document.getElementById(`productInput${id}`);
                input.value = span.textContent;
                var spanMenu = document.getElementById(`productSpanMenu${id}`);
                spanMenu.textContent = 1;
                var inputMenu = document.getElementById(`productInputMenu${id}`);
                spanMenu.textContent = 1;
                inputMenu.value = span.textContent;


                inputMenu.addEventListener('input', () => {
                    var id = inputMenu.id.replace(/\D/g, '');
                    var input = document.getElementById("cartInput" + id);
                    var span = document.getElementById("cartSpan" + id);
                    var productSpan = document.getElementById("productSpan" + id);
                    var productInput = document.getElementById("productInput" + id);
                    var productSpanMenu = document.getElementById("productSpanMenu" + id);
                    var index = productsInCart.findIndex(function (element) {
                        return element.id === id;
                    });
                    productsInCart[index].count = inputMenu.value;
                    input.value = productsInCart[index].count;
                    span.textContent = productsInCart[index].count;
                    productSpan.textContent = productsInCart[index].count;
                    productInput.value = productsInCart[index].count;
                    productSpanMenu.textContent = productsInCart[index].count;
                    inputMenu.value = productsInCart[index].count;

                    const jsonString = JSON.stringify(productsInCart);
                    document.cookie = `MyCookie=${encodeURIComponent(jsonString)}; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=/; Secure; SameSite=None`;

                    var item = document.getElementById(`cart-body-item${id}`);
                    var price = item.getElementsByClassName('cart-body-item-controls-price-primary')[0];
                    price.textContent = (productsInCart[index].count * productsInCart[index].price).toFixed(2) + ' грн';
                    GetFullPriceForCart();
                });
                var price = document.querySelector(`.main-page-product-bottom-price[id="${id}"]`)
                if (price == null)
                    price = document.querySelector(`.main-page-product-bottom-price-promo[id="${id}"]`)
                var parsedPrice = price.textContent.slice(0, -4);
                parsedPrice = parseFloat(parsedPrice.replace(',', '.'));
                var title = product.getElementsByClassName('main-page-product-title')[0].textContent;
                const promoDiv = document.querySelector(`#promo${id}`);
                var promo = null;
                if (promoDiv) promo = promoDiv.textContent.trim();

                var cartProduct = new CartProduct(id, 1, parsedPrice, title, promo);
                productsInCart.push(cartProduct);
                const jsonString = JSON.stringify(productsInCart);
                document.cookie = `MyCookie=${encodeURIComponent(jsonString)}; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=/; Secure; SameSite=None`;


                var cart = document.getElementsByClassName('cart-body-items')[0];
                var leftCart = document.getElementById('leftCartItemContainer');

                var itemInfo = productsInCart.find(function (element) {
                    return element.id === id;
                });

                var item = AddHtmlToCart(itemInfo);
                cart.insertAdjacentHTML('beforeend', item);

                item = AddHtmlToLeftCart(itemInfo);
                leftCart.insertAdjacentHTML('beforeend', item);

                CheckIfCartIsEmpty();
                SetInputs();
                GetFullPriceForCart();
            }
            else {
                var product = document.querySelector(`.products-view-product[id="${id}"]`);
                var overlay = document.getElementById(`overlay${id}`);
                var btns = document.getElementsByClassName('product-menu-buttons')[0];
                var addToCartBtn = document.getElementsByClassName('product-menu-add-to-cart-btn')[0];
                var counter = MakeCounter(id);
                var counterContainer = document.getElementById(`counterContainer${id}`);

                var price = document.querySelector(`.main-page-product-bottom-price[id="${id}"]`)
                if (price == null)
                    price = document.querySelector(`.main-page-product-bottom-price-promo[id="${id}"]`)
                var parsedPrice = price.textContent.slice(0, -4);
                parsedPrice = parseFloat(parsedPrice.replace(',', '.'));
                var title = product.getElementsByClassName('main-page-product-title')[0].textContent;
                const promoDiv = document.querySelector(`#promo${id}`);
                var promo = null;
                if (promoDiv) promo = promoDiv.textContent.trim();
                const brand = product.querySelector('.main-page-product-mass').textContent;
                const country = product.querySelector('.main-page-product-bottom-price-brand').textContent;

                fetch(`/User/AddUserCartProduct?productId=${id}&userId=${userId}&price=${parsedPrice}&title=${title}&count=${1}&promo=${promo}&brand=${brand}&country=${country}`);

                product.classList.add('added');
                overlay.classList.add('green');
                addToCartBtn.style.display = 'none';
                while (counter.firstChild) {
                    btns.prepend(counter.firstChild);
                }
                counterContainer.style.display = 'flex';

                var span = document.getElementById(`productSpan${id}`);
                span.textContent = 1;
                var input = document.getElementById(`productInput${id}`);
                input.value = span.textContent;
                var spanMenu = document.getElementById(`productSpanMenu${id}`);
                spanMenu.textContent = 1;
                var inputMenu = document.getElementById(`productInputMenu${id}`);
                spanMenu.textContent = 1;
                inputMenu.value = span.textContent;

                inputMenu.addEventListener('blur', OnBlurSaveUserCartProduct);
                inputMenu.addEventListener('input', () => {
                    var id = inputMenu.id.replace(/\D/g, '');
                    var input = document.getElementById("cartInput" + id);
                    var span = document.getElementById("cartSpan" + id);
                    var productSpan = document.getElementById("productSpan" + id);
                    var productInput = document.getElementById("productInput" + id);
                    var productSpanMenu = document.getElementById("productSpanMenu" + id);

                    input.value = inputMenu.value;
                    span.textContent = inputMenu.value;
                    productSpan.textContent = inputMenu.value;
                    productInput.value = inputMenu.value;
                    productSpanMenu.textContent = inputMenu.value;
                    inputMenu.value = inputMenu.value;

                    var item = document.getElementById(`cart-body-item${id}`);
                    var price = item.getElementsByClassName('cart-body-item-controls-price-primary')[0];
                    price.textContent = (inputMenu.value * parsedPrice).toFixed(2) + ' грн';
                    var sum = UpdateCartValue();
                    document.querySelector('.cart-text').textContent = sum + ' грн';
                });

                var itemInfo = new CartProduct(id, 1, parsedPrice, title, promo);

                var cart = document.getElementsByClassName('cart-body-items')[0];
                var leftCart = document.getElementById('leftCartItemContainer');

                var item = AddHtmlToCart(itemInfo);
                cart.insertAdjacentHTML('beforeend', item);

                item = AddHtmlToLeftCart(itemInfo);
                leftCart.insertAdjacentHTML('beforeend', item);

                CheckIfCartIsEmpty();
                SetInputs();
                var sum = UpdateCartValue();
                if (sum > 0)
                    document.querySelector('.cart-text').textContent = sum + ' грн';
            }
        }
        lastClickTime = currentTime;
    }

    function CloseProductMenu() {
        var menu = document.getElementsByClassName('product-menu')[0];
        menu.style.right = '-2rem';
        menu.style.visibility = "collapse";
        menu.style.opacity = "0";
        document.getElementsByClassName('footer-container')[0].style.zIndex = '1100';
        $("body").removeClass("overlay");

        var btns = menu.getElementsByClassName('product-menu-buttons')[0];
        var counterContainer = menu.getElementsByClassName('product-menu-counter-container')[0];
        if (counterContainer != null)
            btns.removeChild(counterContainer);

        isProductMenuShowing = false;
    }

    function SetPagenatedArrowBtns() {
        if (currentPage == 1)
            arrowBtns[0].style.color = 'gray';
        else arrowBtns[0].style.color = '#222324';

        if (currentPage == pageNumber)
            arrowBtns[1].style.color = 'gray';
        else arrowBtns[1].style.color = '#222324';
    };

    function SetPagenatedBtns() {
        if (pageNumber > 3) {
            for (var i = 0; i < midleBtns.length; i++)
                midleBtns[i].style.display = 'flex';

            arrowBtns[0].style.display = 'flex';
            arrowBtns[1].style.display = 'flex';

            lastBtn.style.display = "flex";

            if (currentPage > 2) {

                if (currentPage == pageNumber) {
                    firstBtn.style.display = "flex";
                    midleBtns[1].textContent = currentPage - 1;
                    midleBtns[0].textContent = currentPage - 2;
                    midleBtns[2].textContent = currentPage;

                    midleBtns[2].classList.add('pagenated-btn-active');
                }
                else {
                    firstBtn.style.display = "flex";
                    midleBtns[1].textContent = currentPage;
                    midleBtns[0].textContent = currentPage - 1;
                    midleBtns[2].textContent = currentPage + 1;

                    midleBtns[1].classList.add('pagenated-btn-active');
                }
            }
            else
                midleBtns[currentPage - 1].classList.add('pagenated-btn-active');
            if (pageNumber - currentPage < 2)
                lastBtn.style.display = 'none';
        }
        else if (pageNumber > 1 && pageNumber < 4) {
            for (var i = 0; i < pageNumber; i++)
                midleBtns[i].style.display = 'flex';
            arrowBtns[0].style.display = 'flex';
            arrowBtns[1].style.display = 'flex';
            midleBtns[currentPage - 1].classList.add('pagenated-btn-active');
        }
        lastBtn.textContent = pageNumber;
    };

    function SetPageNumbers() {
        if (currentPage == 1) {
            midleBtns[0].textContent = 1;
            midleBtns[1].textContent = 2;
            midleBtns[2].textContent = 3;
        }
        else if (pageNumber == currentPage && currentPage == 2) {
            midleBtns[0].textContent = currentPage - 1;
            midleBtns[1].textContent = currentPage;
            midleBtns[2].textContent = currentPage + 1;
        }
        else if (currentPage > 1 && currentPage < pageNumber) {
            midleBtns[0].textContent = currentPage - 1;
            midleBtns[1].textContent = currentPage;
            midleBtns[2].textContent = currentPage + 1;
        }
        else {
            midleBtns[0].textContent = currentPage - 2;
            midleBtns[1].textContent = currentPage - 1;
            midleBtns[2].textContent = currentPage;
        }
    }

    function OpenCloseFilters() {
        var list = document.getElementsByClassName('filter-drop-down-list')[0];
        var icon = document.getElementsByClassName('filter-btn-icon')[0];
        if (!isFilterOpen) {
            list.style.top = '50px';
            list.style.opacity = 1;
            list.style.visibility = 'visible';
            icon.style.transform = 'rotate(180deg)';
            isFilterOpen = true;
        }
        else {
            list.style.top = '40px';
            list.style.opacity = 0;
            list.style.visibility = 'collapse';
            icon.style.transform = 'rotate(0)';
            isFilterOpen = false;
        }
    }

    function SortBy(event) {
        ShowLoaderBlack();

        var list = document.getElementsByClassName('filter-drop-down-list')[0];
        var spanElements = list.querySelectorAll('.filter-drop-down-list-text');
        spanElements = Array.from(spanElements);
        var choosenFilter = document.getElementsByClassName('filter-btn-text')[1];


        choosenFilter.textContent = event.target.textContent;

        for (const span of spanElements) {
            if (event.target.id == span.id)
                span.style.fontWeight = '700';
            else
                span.style.fontWeight = '400';
        }

        OpenCloseFilters();
    }

    function CheckBoxPromoProducts() {
        ShowLoaderBlack();

        var checkBox = document.getElementsByClassName('check-box')[0];
        if (isCheckBox) {
            checkBox.style.backgroundImage = "none";
            checkBox.style.borderColor = "gray";
            isCheckBox = false;
        }
        else {
            checkBox.style.backgroundImage = "url('https://cdn.iconscout.com/icon/premium/png-256-thumb/accept-154-892430.png')";
            checkBox.style.borderColor = "green";
            isCheckBox = true;
        }
    };

    function AddToCart(event) {
        var currentTime = new Date().getTime();
        if (currentTime - lastClickTime >= 500) {

            var id = event.target.id;
            var userId = GetUserId();

            if (userId === null) {
                var product = document.querySelector(`.products-view-product[id="${id}"]`);
                var overlay = product.getElementsByClassName('product-overlay')[0];
                product.classList.add('added');
                overlay.classList.add('green');

                var counterContainer = document.getElementById(`counterContainer${id}`);
                counterContainer.style.display = 'flex';

                var span = document.getElementById(`productSpan${id}`);
                span.textContent = 1;
                var input = document.getElementById(`productInput${id}`);
                input.value = span.textContent;

                var price = document.querySelector(`.main-page-product-bottom-price[id="${id}"]`)
                if (price == null)
                    price = document.querySelector(`.main-page-product-bottom-price-promo[id="${id}"]`)
                var parsedPrice = price.textContent.slice(0, -4);
                parsedPrice = parseFloat(parsedPrice.replace(',', '.'));
                var title = product.getElementsByClassName('main-page-product-title')[0].textContent;
                const promoDiv = document.querySelector(`#promo${id}`);
                var promo = null;
                if (promoDiv) promo = promoDiv.textContent.trim();

                var cartProduct = new CartProduct(id, 1, parsedPrice, title, promo);
                productsInCart.push(cartProduct);
                const jsonString = JSON.stringify(productsInCart);
                document.cookie = `MyCookie=${encodeURIComponent(jsonString)}; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=/; Secure; SameSite=None`;


                var cart = document.getElementsByClassName('cart-body-items')[0];
                var leftCart = document.getElementById('leftCartItemContainer');
                var itemInfo = productsInCart.find(function (element) {
                    return element.id === id;
                });

                var item = AddHtmlToCart(itemInfo);
                cart.insertAdjacentHTML('beforeend', item);

                item = AddHtmlToLeftCart(itemInfo);
                leftCart.insertAdjacentHTML('beforeend', item);

                CheckIfCartIsEmpty();
                SetInputs();
                GetFullPriceForCart();
            }
            else {
                var product = document.querySelector(`.products-view-product[id="${id}"]`);
                var overlay = product.getElementsByClassName('product-overlay')[0];
                var counterContainer = document.getElementById(`counterContainer${id}`);
                var span = document.getElementById(`productSpan${id}`);
                var input = document.getElementById(`productInput${id}`);

                var price = document.querySelector(`.main-page-product-bottom-price[id="${id}"]`)
                if (price == null)
                    price = document.querySelector(`.main-page-product-bottom-price-promo[id="${id}"]`)
                var parsedPrice = price.textContent.slice(0, -4);
                parsedPrice = parseFloat(parsedPrice.replace(',', '.'));
                var title = product.getElementsByClassName('main-page-product-title')[0].textContent;
                const promoDiv = document.querySelector(`#promo${id}`);
                var promo = null;
                if (promoDiv) promo = promoDiv.textContent.trim();
                const brand = product.querySelector('.main-page-product-mass').textContent;
                const country = product.querySelector('.main-page-product-bottom-price-brand').textContent;

                fetch(`/User/AddUserCartProduct?productId=${id}&userId=${userId}&price=${parsedPrice}&title=${title}&count=${1}&promo=${promo}&brand=${brand}&country=${country}`);

                product.classList.add('added');
                overlay.classList.add('green');
                counterContainer.style.display = 'flex';
                span.textContent = 1;
                input.value = span.textContent;


                var itemInfo = new CartProduct(id, 1, parsedPrice, title, promo);

                var cart = document.getElementsByClassName('cart-body-items')[0];
                var leftCart = document.getElementById('leftCartItemContainer');

                var item = AddHtmlToCart(itemInfo);
                cart.insertAdjacentHTML('beforeend', item);

                item = AddHtmlToLeftCart(itemInfo);
                leftCart.insertAdjacentHTML('beforeend', item);


                CheckIfCartIsEmpty();
                SetInputs();
                var sum = UpdateCartValue();
                if (sum > 0)
                    document.querySelector('.cart-text').textContent = sum + ' грн';
            }
        }
        lastClickTime = currentTime;
    };

    function AddOrRemoveFavoriteProduct3(event) {
        var currentTime = new Date().getTime();
        if (currentTime - lastAddedToFavorite > 500) {
            var pathElement = event.target.closest('path');
            if (!pathElement)
                pathElement = event.target.querySelector('path');

            var userId = GetUserId();

            if (userId === null) {
                ShowAuthorization();
                lastAddedToFavorite = currentTime;
            }
            else {
                var heart = document.getElementsByClassName('favorite-link__heart-icon')[0];
                var btn = document.querySelector('.product-info-add-to-favorites-btn');
                var id = event.target.id.slice(1);
                if (pathElement.classList.contains('active')) {
                    fetch(`/User/RemoveFavoriteProduct?productId=${id}&userId=${userId}`);
                    pathElement.classList.remove('active');
                    var product = document.querySelector(`.products-view-product#${CSS.escape(id)}`)
                    var favoriteBtn = product.querySelector('.main-page-product-favorite');
                    var path = favoriteBtn.querySelector('path');
                    path.classList.remove('active');
                    btn.classList.remove('active');
                    favoriteBtn.classList.remove('active');
                    userFavoriteProductsCount -= 1
                    if (userFavoriteProductsCount < 1)
                        heart.children[0].classList.remove('active');

                    lastAddedToFavorite = currentTime;
                }
                else {
                    var price;
                    var title;
                    var brand;
                    var promo;
                    var country;
                    var product = document.querySelector(`.products-view-product#${CSS.escape(id)}`)

                    price = product.getElementsByClassName('main-page-product-bottom-price')[0];
                    if (price === undefined)
                        price = product.getElementsByClassName('main-page-product-bottom-price-promo')[0].textContent;
                    else price = price.textContent;
                    price = price.slice(0, -4);
                    price = price.replace(/,/g, '.');
                    title = product.getElementsByClassName('main-page-product-title')[0].textContent;
                    promo = product.getElementsByClassName('main-page-product-promo-text')[0]
                    if (promo)
                        promo = promo.textContent;
                    if (promo === undefined)
                        promo = 0;
                    country = product.getElementsByClassName('main-page-product-bottom-price-brand')[0].textContent;
                    brand = product.getElementsByClassName('main-page-product-mass')[0].textContent;

                    fetch(`/User/AddFavoriteProduct?productId=${id}&userId=${userId}&title=${title}&price=${price}&country=${country}&brand=${brand}&promo=${promo}`);
                    pathElement.classList.add('active');
                    userFavoriteProductsCount += 1;
                    heart.children[0].classList.add('active');
                    var favoriteBtn = product.querySelector('.main-page-product-favorite');
                    var path = favoriteBtn.querySelector('path');
                    btn.classList.add('active');
                    path.classList.add('active');
                    favoriteBtn.classList.add('active');

                    lastAddedToFavorite = currentTime;

                }
            }
        }
    }
</script>